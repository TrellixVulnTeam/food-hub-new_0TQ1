{"ast":null,"code":"var _jsxFileName = \"E:\\\\syed\\\\food\\\\client\\\\src\\\\components\\\\ItemsCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addtocart, removefromcart, clearcart } from \"../action/action\";\nimport createTypography from \"@material-ui/core/styles/createTypography\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    width: 300\n  },\n  media: {\n    height: 140\n  }\n});\nexport default function ItemsCard({\n  item,\n  res\n}) {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  console.log(\"INcar  \", cart);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  function addtocartcheck(item, res) {\n    if (JSON.parse(localStorage.getItem(\"restaurant\")) === null) {\n      localStorage.setItem(\"restaurant\", JSON.stringify(res));\n      dispatch(clearcart());\n      dispatch(addtocart(item));\n    }\n\n    if (JSON.parse(localStorage.getItem(\"restaurant\"))._id != res._id) {\n      localStorage.setItem(\"restaurant\", JSON.stringify(res));\n      dispatch(clearcart());\n      dispatch(addtocart(item));\n    } else {\n      dispatch(addtocart(item));\n    }\n  }\n\n  function removetocartcheck(item, res) {\n    dispatch(removefromcart(item.name));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-lg-4 d-flex  justify-content-around mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          className: classes.media,\n          image: \"http://localhost:4000/images/\" + item.pic,\n          title: \"Contemplative Reptile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            component: \"p\",\n            children: item.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => addtocartcheck(item, res),\n          size: \"small\",\n          color: \"primary\",\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), cart.includes(item) ? /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => removetocartcheck(item, res),\n          size: \"small\",\n          color: \"primary\",\n          children: \"Remove from Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ItemsCard, \"k7kjX0odlCoz22+a0mCY7LTPblw=\", false, function () {\n  return [useSelector, useStyles, useDispatch];\n});\n\n_c = ItemsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemsCard\");","map":{"version":3,"sources":["E:/syed/food/client/src/components/ItemsCard.js"],"names":["React","useState","useEffect","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","useSelector","useDispatch","addtocart","removefromcart","clearcart","createTypography","useStyles","root","width","media","height","ItemsCard","item","res","cart","state","console","log","classes","dispatch","addtocartcheck","JSON","parse","localStorage","getItem","setItem","stringify","_id","removetocartcheck","name","pic","description","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,SAApC,QAAqD,kBAArD;AACA,OAAOC,gBAAP,MAA6B,2CAA7B;;AAEA,MAAMC,SAAS,GAAGd,UAAU,CAAC;AAC3Be,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH;AAJoB,CAAD,CAA5B;AASA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAnB,EAAkC;AAAA;;AAC/C,QAAMC,IAAI,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AACA,QAAMI,OAAO,GAAGZ,SAAS,EAAzB;AAEA,QAAMa,QAAQ,GAAGlB,WAAW,EAA5B;;AACA,WAASmB,cAAT,CAAwBR,IAAxB,EAA8BC,GAA9B,EAAmC;AACjC,QAAIQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,MAAmD,IAAvD,EAA6D;AAC3DD,MAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeb,GAAf,CAAnC;AACAM,MAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAe,MAAAA,QAAQ,CAACjB,SAAS,CAACU,IAAD,CAAV,CAAR;AACD;;AACD,QAAIS,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,EAA+CG,GAA/C,IAAsDd,GAAG,CAACc,GAA9D,EAAmE;AACjEJ,MAAAA,YAAY,CAACE,OAAb,CAAqB,YAArB,EAAmCJ,IAAI,CAACK,SAAL,CAAeb,GAAf,CAAnC;AACAM,MAAAA,QAAQ,CAACf,SAAS,EAAV,CAAR;AACAe,MAAAA,QAAQ,CAACjB,SAAS,CAACU,IAAD,CAAV,CAAR;AACD,KAJD,MAIO;AACLO,MAAAA,QAAQ,CAACjB,SAAS,CAACU,IAAD,CAAV,CAAR;AACD;AACF;;AAED,WAASgB,iBAAT,CAA2BhB,IAA3B,EAAiCC,GAAjC,EAAsC;AACpCM,IAAAA,QAAQ,CAAChB,cAAc,CAACS,IAAI,CAACiB,IAAN,CAAf,CAAR;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,8CAAf;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEX,OAAO,CAACX,IAAzB;AAAA,8BACE,QAAC,cAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAEW,OAAO,CAACT,KADrB;AAEE,UAAA,KAAK,EAAE,kCAAkCG,IAAI,CAACkB,GAFhD;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,YAAY,MAAxB;AAAyB,YAAA,OAAO,EAAC,IAAjC;AAAsC,YAAA,SAAS,EAAC,IAAhD;AAAA,sBACGlB,IAAI,CAACiB;AADR;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,YAAA,SAAS,EAAC,GAA5D;AAAA,sBACGjB,IAAI,CAACmB;AADR;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,WAAD;AAAA,gCACE,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMX,cAAc,CAACR,IAAD,EAAOC,GAAP,CAD/B;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGC,IAAI,CAACkB,QAAL,CAAcpB,IAAd,iBACC,QAAC,MAAD;AACE,UAAA,OAAO,EAAE,MAAMgB,iBAAiB,CAAChB,IAAD,EAAOC,GAAP,CADlC;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,KAAK,EAAC,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAQG,IAhBN;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD;;GA/DuBF,S;UACTX,W,EAEGM,S,EAECL,W;;;KALKU,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addtocart, removefromcart, clearcart } from \"../action/action\";\nimport createTypography from \"@material-ui/core/styles/createTypography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nexport default function ItemsCard({ item, res }) {\n  const cart = useSelector((state) => state.cart);\n  console.log(\"INcar  \", cart);\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  function addtocartcheck(item, res) {\n    if (JSON.parse(localStorage.getItem(\"restaurant\")) === null) {\n      localStorage.setItem(\"restaurant\", JSON.stringify(res));\n      dispatch(clearcart());\n      dispatch(addtocart(item));\n    }\n    if (JSON.parse(localStorage.getItem(\"restaurant\"))._id != res._id) {\n      localStorage.setItem(\"restaurant\", JSON.stringify(res));\n      dispatch(clearcart());\n      dispatch(addtocart(item));\n    } else {\n      dispatch(addtocart(item));\n    }\n  }\n\n  function removetocartcheck(item, res) {\n    dispatch(removefromcart(item.name));\n  }\n  return (\n    <div className=\"col-lg-4 d-flex  justify-content-around mt-5\">\n      <Card className={classes.root}>\n        <CardActionArea>\n          <CardMedia\n            className={classes.media}\n            image={\"http://localhost:4000/images/\" + item.pic}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {item.name}\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {item.description}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button\n            onClick={() => addtocartcheck(item, res)}\n            size=\"small\"\n            color=\"primary\"\n          >\n            Add to Cart\n          </Button>\n          {cart.includes(item) ? (\n            <Button\n              onClick={() => removetocartcheck(item, res)}\n              size=\"small\"\n              color=\"primary\"\n            >\n              Remove from Cart\n            </Button>\n          ) : null}\n        </CardActions>\n      </Card>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}